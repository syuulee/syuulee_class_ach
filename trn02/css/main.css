.Wrap {}

.container {
    display: flex;
    width: 1200px;
    margin: 0 auto;
}

.inner {
    width: 1200px;
    margin: 0 auto;
}

/* 2020.06.20. lsy topBanner */

.topBanner {
    position: sticky;
    inset: 0 auto auto 0;
    width: 100%;
    padding: 30px 0;
    background: #f1f1f1;
    z-index: 999;
}

.topBanner .inner {
    position: relative;
}

.topBanner h2 {
    font-size: 30px;
    font-weight: 700;
    margin: 0 0 10px 0;
}

.topBanner p {
    font-size: 15px;
    font-weight: 300;
}

.topBanner a {
    margin: 0 0 0 10px;
    padding: 3px 15px 5px 15px;
    /*아래 위로 패딩이 들어간 것처럼 보이는 것! 오해금지 */
    background: #333;
    color: #fff;
}

.topBanner i {
    position: absolute;
    inset: 0 0 auto auto;
    font-size: 21px;
    padding: 5px;
    background: #ddd;
    border-radius: 3px;
    cursor: pointer;
}

#header {
    line-height: 100px;
    border-bottom: 1px solid #ddd;
}

#header .container {
    justify-content: space-between;
}

#header nav>ul {
    display: flex;
}

#header nav>ul>li>a {
    padding: 0 15px;
    font-size: 17px;
}

#header nav>ul>li~li::before {
    content: "";
    display: inline-block;
    width: 1px;
    height: 14px;
    background: #ddd;
}

#header a {
    display: inline-block;
}

#searchForm input[type="text"] {
    outline: none;
    border: none;
    border-bottom: 1px solid #333;
    padding: 5px 0;
    color: skyblue;
}

#searchForm input[type="text"]::placeholder {
    color: skyblue;
}

#searchForm input[type="text"]:focus::placeholder {
    opacity: 0;
    /* display:none은 안됨 */
}

#searchForm button {
    background: transparent;
    outline: none;
    border: none;
    font-size: 21px;
}

.mainVisual {
    position: relative;
}

.mainVisual .mainSlider figure {
    position: relative;
    height: 600px;
}

.mainVisual .mainSlider .itm01 {
    background: url(../img/mainvisual01.jpg) no-repeat center center/cover;
}

.mainVisual .mainSlider .itm02 {
    background: url(../img/mainvisual02.jpg) no-repeat center center/cover;
}

.mainVisual .mainSlider .itm03 {
    background: url(../img/mainvisual03.jpg) no-repeat center center/cover;
}

.mainVisual .mainSlider .inner {
    position: absolute;
    inset: 50% auto auto 50%;
    transform: translate(-50%, -50%);
    color: #fff;
    text-shadow: 0 0 3px #000;
}

.mainVisual .mainSlider .itm02 .inner {
    color: #333;
    text-shadow: 0 0 3px #fff;
}

.mainVisual .mainSlider .inner h2 {
    font-size: 40px;
    font-weight: 700;
    margin: 0 0 10px 0;
}

.mainVisual .mainSlider .inner p {
    font-size: 15px;
    font-weight: 300;
    margin: 0 0 10px 0;
}

.mainVisual .mainSlider .inner a {
    display: inline-block;
    /* 자연스럽게 콘텐츠 사이즈에 맞게 쪼그라든다.
    block을 주면 width를 줄 수 있으나, 글자가 늘어나면 width가 유지된 상태에서 글자가 들어가기 때문에 유연성이 없다. 그래서 inline-block을 주고 padding을 주면 됨*/
    padding: 5px 20px;
    background: #333;

}

.mainVisual .mainSlider figure h2 {
    transform: translateY(100px);
    opacity: 0;
}

.mainVisual .mainSlider figure.on h2 {
    transform: translateY(0);
    opacity: 1;
    transition: 0.5s;
}

.mainVisual .mainSlider figure p {
    transform: translateY(100px);
    opacity: 0;
}

.mainVisual .mainSlider figure.on p {
    transform: translateY(0);
    opacity: 1;
    transition: 0.5s 0.5s;
}

.mainVisual .mainSlider figure a {
    transform: translateY(100px);
    opacity: 0;
}

.mainVisual .mainSlider figure.on a {
    transform: translateY(0);
    opacity: 1;
    transition: 0.5s 1s;
}

.mainVisual .mainSlider .slick-dots {
    position: absolute;
    inset: auto auto 100px 50%;
    transform: translateX(-50%);
}

.mainVisual .mainSlider .slick-dots li {
    display: inline-block;

}

.mainVisual .mainSlider .slick-dots button {
    border-radius: 50%;
    outline: none;
    border: none;
    width: 22px;
    height: 22px;
    margin: 0 2px;
}

.mainVisual .mainSlider .slick-dots li.slick-active button {
    background: #f00;
    color: #fff;
}

.slideNum {
    position: absolute;
    inset: 50px auto auto 50%;
    /* 0을 주면 박스가 이상하게 늘어나기 때문에 auto를 준다 */
    margin: 0 0 0 600px;
    transform: translateX(-100%);
    color: #fff;
    text-shadow: 0 0 3px #000;
    font-size: 41px;
}

.mainArrow i {
    position: absolute;
    inset: 50% auto auto 50%;
    transform: translate(-50%, -50%);
    color: rgba(255, 255, 255, 0.5);
    font-size: 100px;
}

.mainArrow i.on {
    color: rgba(0, 0, 0, 0.5);
}

.mainArrow i:nth-child(1) {
    margin: 0 0 0 -700px;
    /* 1200 박스 밖으로 나가야함 */
}

.mainArrow i:nth-child(2) {
    margin: 0 0 0 700px;
    /* 1200 박스 밖으로 나가야함 */
}

.mainContent {
    padding: 100px;
    /* 공간 주는 것 패딩!!! */
    text-align: center;
    /* 부모박스에 text-align줘서 상속받을 수 있게 */
}

.mainContent h2 {
    margin: 0 0 10px 0;
    font-size: 19px;
    font-weight: 700px;
    /* em은 폰트사이지의 n배
    지금은 폰트사이즈 19px * -0.025
    양수가 되면 간격이 벌어지고, 음수는 간격이 붙음. 
    letter-spacing에서만 주로 사용
    rem: r이 루트(최상위) 기본(현재는16픽셀_내가 정할 수 있음)x곱하기 한 것
    즉, 1rem=16 
    html이 기본으로 주는 폰트사이즈를 한 번에 바꿀 수 있어서 각광받고 있음
    vh: 현재 실행중인 스크린 크기에 맞춰 상대적 크기를 반환. 뷰포트 높이의 1% 길이와 동일(모바일 꽉 차게 만들 때)
    vw: 아주 중요. 뷰포트 사이즈를 계산해서 스크롤 바가 없을 때는 상관 없는데, 아래로내려오는 스크롤바가 있으면 스크롤바를 포함한 사이즐르 계산하기 때문에 아래쪽에 스크롤바가 생김. 100퍼센트와는 다름(부모 상속값). auto는 박스 자체가 신축을 가지는 값. 모바일 환경에서 아주 중요하게 쓰임. 대표적인 사이트가 넷플릭스. 뷰포트에 따라 폰트 사이즈가 변함*/
}

.mainContent p {
    margin: 0 0 30px 0;
    font-size: 15px;
    font-weight: 300px;
    letter-spacing: -0.025em;
}

.mainContent .container {
    gap: 30px;
}

.mainContent .container figure {
    flex: 1;
}

.mainContent .container img {
    margin: 0 0 10px 0;
}

.mainContent .container strong {
    display: block;
    margin: 0 0 10px 0;
    font-size: 15px;
}

.mainContent .container a {
    display: inline-block;
    padding: 5px 15px;
    background: #333;
    color: #fff;
    /* display:block width: 100px;
    margin: 0 auto; */
}

.mainContent2 {
    padding: 100px 0;
    text-align: center;
    background: #f9f9f9;
}

.mainContent2 h2 {
    margin: 0 0 10px 0;
    font-size: 19px;
    font-weight: 700px;
}

.mainContent2 p {
    margin: 0 0 30px 0;
    font-size: 15px;
    font-weight: 300px;
    letter-spacing: -0.025em;
}

.mainContent2 .container {
    gap: 30px;
}

.mainContent2 .container figure {
    flex: 1;
}

.mainContent2 .container img {
    margin: 0 0 10px 0;
}

.mainContent2 .container strong {
    display: block;
    margin: 0 0 10px 0;
    font-size: 15px;
}

.mainContent2 .container a {
    display: inline-block;
    padding: 5px 15px;
    background: #333;
    color: #fff;
    /* display:block width: 100px;
    margin: 0 auto; */
}

.mainContent3 {
    padding: 100px 0;
    text-align: center;
}

.mainContent3 h2 {
    margin: 0 0 10px 0;
    font-size: 19px;
    font-weight: 700px;
}

.mainContent3 p {
    margin: 0 0 30px 0;
    font-size: 15px;
    font-weight: 300px;
    letter-spacing: -0.025em;
}

.mainContent3 .container {
    gap: 30px;
}

.mainContent3 .container figure {
    flex: 1;
}

/* .mainContent3 .container img {
    / margin: 0 0 10px 0; 
} .mainContent3 .box에 overflow:hidden을 주고, 마진을 같이 줌*/

.mainContent3 .container strong {
    display: block;
    margin: 0 0 10px 0;
    font-size: 15px;
}

.mainContent3 .container a {
    display: inline-block;
    padding: 5px 15px;
    background: #333;
    color: #fff;
    font-size: 15px;
    /* display:block width: 100px;
    margin: 0 auto; */
}

/* 이미지가 스케일됐을 때, 옆에 있는 이미지를 침범하는 것을 막기 위해서 div로 감싸줌  */
.mainContent3 figure .box {
    overflow: hidden;
    margin: 0 0 10px 0;
    transition: border-radius 0.5s 0.5s;
}

.mainContent3 figure:hover .box {
    border-radius: 50%;
}

/* .mainContent3 figure img {
    transition: transform 0.5s; 

} */

.mainContent3 figure:hover img {
    transform: scale(1.3);

}

.fixedBg {
    padding: 100px 0;
    text-align: center;
    color: #fff;
    background: url(../img/mainvisual01.jpg) no-repeat fixed center center/cover;
    filter: grayscale(1);
}

.fixedBg h2 {
    margin: 0 0 10px 0;
    font-size: 19px;
    font-weight: 700px;
}

.fixedBg p {
    margin: 0 0 30px 0;
    font-size: 15px;
    font-weight: 300px;
}

.fixedBg i {
    padding: 5px;
    background: #f00;
    vertical-align: -10%;
    border-radius: 50%;
}

.fixedBg2 {
    padding: 100px 0;
    /* margin: 0 0 100vh 0; */
    text-align: center;
    color: #fff;
    background: url(../img/mainvisual01.jpg) no-repeat fixed center center/cover;
}

.fixedBg2 h2 {
    margin: 0 0 10px 0;
    font-size: 19px;
    font-weight: 700px;
}

.fixedBg2 p {
    margin: 0 0 30px 0;
    font-size: 15px;
    font-weight: 300px;
}

.fixedBg2 i {
    padding: 5px;
    background: #f00;
    vertical-align: -10%;
    border-radius: 50%;
}

.service {
    padding: 100px 0;
}

.service .container {
    gap: 30px;
}

.service .container>div {
    /* position: relative;
    padding-bottom: 56.28%; */
    flex: 1;
    /* 사이즈가 스트레치됨 유튜브 동영상 자체의 높이를 받은 상태 근데 옆에 map도 absolute로 띄우고, inset을 0으로 다 주면 높이 자체가 없어지기 때문에 사라짐 */
    /* flex를 주면 스트레치됨(=늘어남) 그래서 박스로 싸서 스트레치 되는 걸 막는다. */
}

.service .container .case {
    position: relative;
    padding-bottom: 56.25%;
}

.service .container iframe {
    position: absolute;
    inset: 0 0 0 0;
}

.service .container .root_daum_roughmap {
    position: absolute;
    inset: 0 0 0 0;
    width: 100%;
}

.service .container .root_daum_roughmap .wrap_map {
    height: 100%;
}

.ytb {
    padding: 100px 0;
    color: #fff;
    text-align: center;
    filter: grayscale(1);
}

.ytb h2 {
    margin: 0 0 10px 0;
    font-size: 19px;
    font-weight: 700px;
}

.ytb p {
    margin: 0 0 30px 0;
    font-size: 15px;
    font-weight: 300px;
}

.ytb i {
    padding: 5px;
    background: #333;
    vertical-align: 0;
    border-radius: 50%;
}

.scrollMe {
    padding: 100px 0;
}

.scrollMe .container {
    gap: 70px;
}

.scrollMe .container figure {
    flex: 1;
}

.product {
    position: relative;
    padding: 100px 0;
    text-align: center;
    border-top: 1px solid #ddd;

}

.product h2 {
    margin: 0 0 10px 0;
    font-size: 19px;
    font-weight: 700px;
}

.product h2::after {
    content: "";
    display: block;
    width: 1px;
    height: 50px;
    background: #f00;
    margin: 10px auto;
}

.product p {
    margin: 0 0 30px 0;
    font-size: 15px;
    font-weight: 300px;
    letter-spacing: -0.025em;
}

.product .productSlider figure {
    padding: 40px 15px 0 15px;
    /* flex가 된 상태가 아니라서 gap은 사용 못 함 */
    font-size: 13px;
}

/* .product .productSlider .slick-list {
    overflow: visible;
    overflow-x: hidden; 
} */

.product .productSlider figure.slick-center img {
    transform: scale(1.25);
    transition: transform 0.5s;
    border: 2px solid rgba(0, 0, 0, 0.5);
}

.product .productSlider .inbox {
    margin: 0 0 10px 0;
    /* overflow: hidden; */
}

.product .productSlider strong {
    position: relative;
    top: -15px;
    display: block;
    margin: 0 0 10px 0;
}

.product .productSlider a {
    display: inline-block;
    padding: 5px 15px;
    margin: 0 0 10px 0;
    background: #333;
    color: #fff;
}

.product .productSlider .slick-dots {
    padding: 20px 0 0 0;
}

.product .productSlider .slick-dots li {
    display: inline-block;
    margin: 0 2px;
    /* width: 10px;
    height: 10px;
    background: #333; */
    /* 슬릭자체에서 block이 되어 있기 때문에 flex를 주면 안됨(자바스크립트 슬릭의 block을 우선으로 하기 때문에) 그래서 flex가 아닌 inline-block을 줌 */
}

.product .productSlider .slick-dots li button {
    /* display: none; */
    padding: 0;
    font-size: 10px;
    vertical-align: top;
    border: none;
    outline: none;
    background: #f00;
    color: #fff;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    /* 텍스트는 가운데로 가려고 하는 속성이 있고, slick 버튼 자체에 높이가 있는데, 높이/너비를 주니까 글자가 늘어남. 그래서 폰트 사이즈를 줄여서 글자를 가운데로 가게 함  */
}

.product .productSlider .slick-dots li.slick-active button {
    background: #333;
}

.product .productArrows i {
    position: absolute;
    inset: 50% auto auto 50%;
    transform: translate(-50%, -50%);
    font-size: 40px;
    background: rgba(0, 0, 0, 0.5);
    color: #fff;
    border-radius: 5px;
}

.product .productArrows i:nth-child(1) {
    margin: 0 0 0 -600px;
}

.product .productArrows i:nth-child(2) {
    margin: 0 0 0 600px;
}

.serviceTab {
    padding: 100px 0;
    background: #f1f1f1;
}


.serviceTab .container {
    gap: 30px;
}

.serviceTab .container>div {
    flex: 1;

}

.serviceTab .tab_content>div {
    display: none;
}

.serviceTab .tab_content>div.on {
    display: block;
}


.serviceTab .tab_menu {
    display: flex;
}

.serviceTab .tab_menu li {
    flex: 1;
    background: #ddd;
    color: #333;
}

.serviceTab .tab_menu li.on {
    background: peru;
    color: #fff;
}

.serviceTab .tab_menu li~li {
    border-left: 1px solid #fff;
}

.serviceTab .tab_menu li a {
    display: block;
    padding: 10px 15px;
}

.serviceTab .tab_content .notice li {
    line-height: 25px;
    border-bottom: 1px solid #ddd;
}


.serviceTab .tab_content .notice a {
    display: flex;
    justify-content: space-between;
}

.serviceTab .tab_content .notice strong {
    width: 450px;
    white-space: nowrap;
    text-overflow: ellipsis;
    /* white-space 공백처리  */
    overflow: hidden;
}

.serviceTab .right_content h2 {
    margin: 0 0 10px 0;
    font-size: 19px;
    font-weight: 700px;
}

.serviceTab .right_content p {
    margin: 0 0 30px 0;
    font-size: 15px;
    font-weight: 300px;
    letter-spacing: -0.025em;
    line-height: 25px
}

.serviceTab .right_content a {
    /* margin: 0 0 0 10px; */
    padding: 3px 15px 5px 15px;
    background: olive;
    color: #fff;
}

.serviceTab .right_content li {
    display: none;
}

.serviceTab .right_content li.on {
    display: block;
}

.toTop {
    display: none;
    position: fixed;
    inset: auto 50px 50px auto;
    z-index: 999;
}

.toTop i {
    padding: 10px;
    background: rgba(0, 0, 0, 0.5);
    color: #fff;
    font-size: 15px;
    border-radius: 5px;
    cursor: pointer;
}

#footer {
    background: #333;
    color: #fff;
    line-height: 80px;
    font-size: 15px;
}

#footer .top dt,
#footer .top dd {
    display: inline-block;
}

#footer .top {
    border-bottom: 1px solid #666;
    /* border는 배경색보다 한 톤정도 밝은 색으로 */
}

#footer .top dt::before,
#footer .top dd~dd::before {
    content: "";
    display: inline-block;
    margin: 0 15px;
    width: 1px;
    height: 10px;
    background: #ddd;
}

/* #footer .top dd:nth-child(1) {
    padding: 0 15px 0 0;
     padding-left: none;으로도 가능 
}  */

#footer .top i {
    font-size: 25px;
}

#footer .container {
    justify-content: space-between;
}

#footer .bottom address {
    font-style: normal;
}

#footer .bottom select {
    font-size: 12px;
    text-transform: uppercase;
    background: transparent;
    color: #ddd;
    padding: 5px 15px;
    border: 1px solid #666;
}

#footer .bottom option {
    color: #fff;
    background: #333;
}